{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "C2E Publisher Service"
  },
  "schemes": ["http", "https"],
  "paths": {
    "/api/v1/c2e/publish": {
      "post": {
        "x-swagger-router-controller": "c2e",
        "operationId": "publish-c2e",
        "tags": ["C2E Routes"],
        "summary": "Publish C2E (called from publisher tool)",
        "description": "Endpoint to publish C2E with required entities",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "C2E Publisher Servcie API Key",
            "type": "string",
            "default": "APIKey (role: cee-publisher-tool)",
            "required": true
          },
          {
            "in": "body",
            "name": "payload",
            "description": "C2E entity details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishC2ERequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully published C2E Entity",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request payload"
                },
                "result": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/c2e/manifest": {
      "post": {
        "x-swagger-router-controller": "c2e",
        "operationId": "c2e-manifest",
        "tags": ["C2E Routes"],
        "summary": "Create C2E Manifest (called from store service)",
        "description": "Endpoint to create C2E Manifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API Key",
            "type": "string",
            "default": "APIKey (role: cee-store-service)",
            "required": true
          },
          {
            "in": "body",
            "name": "payload",
            "description": "C2E Manifest Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateC2EManifestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created C2E Manifest",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request payload"
                },
                "result": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/c2e-stores": {
      "get": {
        "x-swagger-router-controller": "c2e-store",
        "operationId": "Get C2E Stores",
        "tags": ["C2E Store Routes"],
        "summary": "Get C2E Stores (called from publisher tool)",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Get C2E Stores",
            "type": "string",
            "default": "APIKey (role: cee-publisher-tool)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "C2E Store ID"
                      },
                      "name": {
                        "type": "string",
                        "example": "C2E Store Name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      
      }
    },
    "/api/v1/stream/token": {
      "get": {
        "x-swagger-router-controller": "c2e-stream",
        "operationId": "Stream C2E",
        "tags": ["C2E Routes"],
        "summary": "Get C2E Stream token (called from store service)",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Authentication and Authorization",
            "type": "string",
            "default": "APIKey (role: cee-store-service)",
            "required": true
          },
          {
            "name": "subid",
            "in": "query",
            "description": "C2E Subscription ID setup on the store service",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ceeId": {
                        "type": "string",
                        "example": "C2E ID"
                      },
                      "token": {
                        "type": "string",
                        "example": "C2E Stream Token"
                      },
                      "expiresAt": {
                        "type": "string",
                        "example": "C2E Stream Token Expiry Date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      
      }
    },
    "/api/v1/stream/token/verify": {
      "get": {
        "x-swagger-router-controller": "verify-c2e-stream",
        "operationId": "Verify C2E Stream Token",
        "tags": ["C2E Routes"],
        "summary": "Verify C2E Stream token (called from publisher service)",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Authentication and Authorization",
            "type": "string",
            "default": "APIKey (role: cee-publisher-tool)",
            "required": true
          },
          {
            "name": "ceeId",
            "in": "query",
            "description": "C2E ID",
            "type": "string",
            "required": false
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "valid": {
                        "type": "boolean",
                        "example": "true | false"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      
      }
    },
    "/api/v1/stream/manifest": {
      "get": {
        "x-swagger-router-controller": "c2e-stream-manifest",
        "operationId": "C2E Manifest",
        "tags": ["C2E Routes"],
        "summary": "Get C2E Manifest (called from store service)",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Authentication and Authorization",
            "type": "string",
            "default": "APIKey (role: cee-store-service)",
            "required": true
          },
          {
            "name": "subid",
            "in": "query",
            "description": "C2E Subscription ID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ceeId": {
                        "type": "string",
                        "example": "C2E Subscription ID"
                      },
                      "manifest": {
                        "type": "string",
                        "example": "C2E Manifest"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      
      }
    },
    "/api/v1/keys": {
      "get": {
        "x-swagger-router-controller": "users",
        "operationId": "API Keys",
        "tags": ["API Key Routes"],
        "summary": "Get API Keys",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "type": "string",
            "default": "Bearer APIKey",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "APIKey"
                      },
                      "clientRole": {
                        "type": "string",
                        "example": "cee-publisher-tool | cee-store-service"
                      },
                      "clientEmail": {
                        "type": "string",
                        "example": "demo-c2e-store@curriki.org"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/register": {
      "post": {
        "x-swagger-router-controller": "users",
        "operationId": "user-register",
        "tags": ["Admin Routes"],
        "summary": "Account Registration Endpoint",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "User details",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jhondoe@curriki.com"
                },
                "password": {
                  "type": "string",
                  "example": "TheMostSecurePassword123#"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "An account with this email already exists!"
                },
                "result": {
                  "type": "boolean",
                  "example": null
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/login": {
      "post": {
        "x-swagger-router-controller": "users",
        "operationId": "user-login",
        "tags": ["Admin Routes"],
        "summary": "Account Signin Endpoint",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jhondoe@curriki.com"
                },
                "password": {
                  "type": "string",
                  "example": "TheMostSecurePassword123#"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "string",
                  "example": "some JWT Token"
                }
              }
            }
          },
          "400": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid email or password provided!"
                },
                "result": {
                  "type": null,
                  "example": null
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/getProfile": {
      "get": {
        "x-swagger-router-controller": "users",
        "operationId": "View Profile",
        "tags": ["Admin Routes"],
        "summary": "Get Profile",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "type": "string",
            "default": "Bearer {token}",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "object",
                  "example": {
                    "id": 1,
                    "email": "jhondoe@curriki.com",
                    "createdAt": "2023-12-12T10:23:55.242Z",
                    "updatedAt": "2023-12-12T11:09:37.077Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/verifyResetPasswordToken": {
      "get": {
        "x-swagger-router-controller": "users",
        "operationId": "Verify Reset Password Token",
        "tags": ["Admin Routes"],
        "summary": "Verify Reset Password Token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string",
              "default": "token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
              "description": "Response Format",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "example": 400
                  },
                  "message": {
                    "type": "string",
                    "example": "Could not verify the token"
                  },
                  "result": {
                    "type": "boolean",
                    "example": null
                  }
                }
              }
            }
        }
      }
    },
    "/api/v1/admin/updatePassword": {
      "patch": {
        "x-swagger-router-controller": "users",
        "operationId": "Update Acount password",
        "tags": ["Admin Routes"],
        "summary": "Update Account Password",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "type": "string",
            "default": "Bearer {token}",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "description": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "StrongPassword1@"
                },
                "newPassword": {
                  "type": "string",
                  "example": "StrongPassword2@"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
              "description": "Response Format",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "example": 400
                  },
                  "message": {
                    "type": "string",
                    "example": "Incorrect password!"
                  },
                  "result": {
                    "type": "boolean",
                    "example": null
                  }
                }
              }
            }      
        }
      }
    },
    "/api/v1/admin/forgetPassword": {
      "post": {
        "x-swagger-router-controller": "users",
        "operationId": "Request Reset Password Link",
        "tags": ["Admin Routes"],
        "summary": "Request Reset Password Link",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "mehmoodce@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": [
            {
              "description": "Response Format",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "example": 400
                  },
                  "message": {
                    "type": "string",
                    "example": "Incorrect password!"
                  },
                  "result": {
                    "type": "boolean",
                    "example": null
                  }
                }
              }
            },
            {
              "description": "Response Format",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "example": 400
                  },
                  "message": {
                    "type": "string",
                    "example": "You cannot set your current password as your new password!"
                  },
                  "result": {
                    "type": "boolean",
                    "example": null
                  }
                }
              }
            }
          ]
        }
      }
    },
    "/api/v1/admin/resetPassword": {
      "post": {
        "x-swagger-router-controller": "users",
        "operationId": "Reset Password",
        "tags": ["Admin Routes"],
        "summary": "Reset Password",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "Mehmood@Curriki1@"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response Format",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "result": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
              "description": "Response Format",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "example": 400
                  },
                  "message": {
                    "type": "string",
                    "example": "Reset password link Expired"
                  },
                  "result": {
                    "type": "boolean",
                    "example": null
                  }
                }
              }
            }
        }
      }
    }
  },
  "definitions": {
    "CreateC2EManifestRequest": {
      "type": "object",
      "properties": {
        "ceeId": {
          "type": "string",
          "description": "C2E Id (which has already been created in C2E Publisher Service)"
        },
        "previewCeeSubscription": {
          "type": "object",
          "properties": {
            "ceeListingId": {
              "type": "string",
              "description": "C2E Listing Id (which has already been created in C2E Store Service)"
            },
            "type": {
              "type": "string",
              "description": "C2E Subscription Type (e.g., preview) (which has already been created in C2E Store Service)"
            },
            "licenseType": {
              "type": "string",
              "description": "C2E License Type (e.g., Creative Commons) (which has already been created in C2E Store Service)"
            },
            "licenseTerms": {
              "type": "string",
              "description": "C2E License Terms (which has already been created in C2E Store Service)"
            },
            "amount": {
              "type": "string",
              "description": "C2E Subscription Amount (which has already been created in C2E Store Service)"
            },
            "currency": {
              "type": "string",
              "description": "C2E Subscription Currency (e.g., USD) (which has already been created in C2E Store Service)"
            },
            "copyrightNotice": {
              "type": "string",
              "description": "C2E Subscription CopyRight Notice (which has already been created in C2E Store Service)"
            },
            "license": {
              "type": "string",
              "description": "C2E Subscription License (which has already been created in C2E Store Service)"
            },
            "clientId": {
              "type": "string",
              "description": "C2E Subscription Client Id (which is assoicated with Player Service and has already been created in C2E Store Service)"
            }
          }
        },
        "licensedCeeSubscription": {
          "type": "object",
          "properties": {
            "ceeListingId": {
              "type": "string",
              "description": "C2E Listing Id (which has already been created in C2E Store Service)"
            },
            "type": {
              "type": "string",
              "description": "C2E Subscription Type (e.g., licensed) (which has already been created in C2E Store Service)"
            },
            "licenseType": {
              "type": "string",
              "description": "C2E License Type (e.g., Creative Commons) (which has already been created in C2E Store Service)"
            },
            "licenseTerms": {
              "type": "string",
              "description": "C2E License Terms (which has already been created in C2E Store Service)"
            },
            "amount": {
              "type": "string",
              "description": "C2E Subscription Amount (which has already been created in C2E Store Service)"
            },
            "currency": {
              "type": "string",
              "description": "C2E Subscription Currency (e.g., USD) (which has already been created in C2E Store Service)"
            },
            "clientId": {
              "type": "string",
              "description": "C2E Subscription Client Id (which is assoicated with Player Service and has already been created in C2E Store Service)"
            }
          }
        }
      }
    },
    "PublishC2ERequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "C2E Title (which would be the as Educational Experience Title)"
        },
        "description": {
          "type": "string",
          "description": "C2E Description (which would be the as Educational Experience description)"
        },
        "creator": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "C2E Creator Name"
            },
            "email": {
              "type": "string",
              "description": "C2E Creator Email"
            }
          }
        },
        "storeId": {
          "type": "string",
          "description": "Unique identifier of the store"
        },
        "workflowItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/C2EWorkflowItem"
          }
        }
      }
    },
    "C2EWorkflowItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Educational Experience Title"
        },
        "description": {
          "type": "string",
          "description": "Educational Experience description"
        },
        "type": {
          "type": "string",
          "description": "Type of the workflow item (e.g., Educational Experience)"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Educational Experience Subjects"
          }
        },
        "educationLevel": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Educational Experience Education Levels"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Educational Experience Keywords"
          }
        },
        "url": {
          "type": "string",
          "description": "Educational Experience C2E Protected URL"
        },
        "thumbnailUrl": {
          "type": "string",
          "description": "Educational Experience Thumbnail URL"
        },
        "media": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/C2EMedia"
          }
        }
      }
    },
    "C2EMedia": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Identifier for the media"
        },
        "identifierType": {
          "type": "string",
          "description": "Type of identifier (e.g., ISBN, DOI, URL, UUID, other)"
        },
        "name": {
          "type": "string",
          "description": "Name of the media"
        },
        "description": {
          "type": "string",
          "description": "Description of the media"
        },
        "resource": {
          "type": "string",
          "description": "Media URL or source identifier for the media"
        },
        "encodingFormat": {
          "type": "string",
          "description": "Encoding format of the media (e.g., video/mp4)"
        },
        "royalty": {
          "$ref": "#/definitions/C2EMediaRoyalty"
        },
        "owner": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "C2E Media Owner Name"
            },
            "email": {
              "type": "string",
              "description": "C2E Media Owner Email"
            }
          }
        }
      }
    },
    "C2EMediaRoyalty": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of royalty (e.g., usage, monthly, yearly)"
        },
        "terms": {
          "type": "string",
          "description": "Terms of the royalty agreement"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the royalty"
        },
        "currency": {
          "type": "string",
          "description": "Currency of the royalty (e.g., USD)"
        },
        "copyrightNotice": {
          "type": "string",
          "description": "Short copyright/license text"
        },
        "license": {
          "type": "string",
          "description": "Long copyright/license text or HTML formatted content of the video"
        },
        "licenseUrl": {
          "type": "string",
          "description": "URL of the license"
        },
        "licenseType": {
          "type": "string",
          "description": "Type of the license (e.g., Creative Commons)"
        },
        "licenseVersion": {
          "type": "string",
          "description": "Version of the license (e.g., 4.0)"
        },
        "yearFrom": {
          "type": "string",
          "description": "Year from which the royalty is applicable"
        },
        "yearTo": {
          "type": "string",
          "description": "Year to which the royalty is applicable"
        }
      }
    }
  }
}
